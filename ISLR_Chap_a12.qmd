---
title: "ISLR_Chap_a12"
format: html
editor: visual
---

```{r}
library(tidymodels)
library(tidyclust)
library(factoextra)
library(patchwork)
library(proxy)
library(ISLR)

theme_set(theme_bw(base_family = "Barlow", base_size = 16))
```

```{r}
USArrests <- as_tibble(USArrests, rownames = "state")
USArrests
```

```{r}
USArrests |> 
  select(-state) |> 
  map(mean)
```

```{r}
USArrests_pca <- USArrests |> 
  select(-state) |> 
  prcomp(scale = TRUE)

USArrests_pca
```

```{r}
tidy(USArrests_pca)
```

```{r}
tidy(USArrests_pca, matrix = "loadings")
```

```{r}
tidy(USArrests_pca, matrix = "loadings") |> 
  ggplot() +
  aes(value, column) +
  facet_wrap(~ PC) +
  geom_col() +
  scale_x_continuous(labels = scales::percent)
```

```{r}
pca_rec <- recipe(~., data = USArrests) |> 
  step_normalize(all_numeric()) |> 
  step_pca(all_numeric(), id = "pca") |> 
  prep()
```

```{r}
pca_rec |> 
  bake(new_data = NULL)
```

```{r}
set.seed(2)

x_df <- tibble(
  V1 = rnorm(n = 50, mean = rep(c(0, 3), each = 25)),
  V2 = rnorm(n = 50, mean = rep(c(0, -4), each = 25))
)

x_df |> 
  ggplot() +
  aes(V1, V2, color = rep(c("A", "B"), each = 25)) +
  geom_point() +
  labs(color = "groups")
```

```{r}
kmeans_spec <- k_means(num_clusters = 3) |> 
  set_mode("partition") |> 
  set_engine("stats") |> 
  set_args(nstart = 20)

kmeans_spec
```

```{r}
set.seed(1234)
kmeans_fit <- kmeans_spec |> 
  fit(~., data = x_df)

kmeans_fit
```

```{r}
extract_fit_summary(kmeans_fit)
```

```{r}
augment(kmeans_fit, new_data = x_df)
```

```{r}
augment(kmeans_fit, new_data = x_df) |> 
  ggplot() +
  aes(V1, V2, color = .pred_cluster) +
  geom_point()
```

```{r}
kmeans_spec_tuned <- kmeans_spec |> 
  set_args(num_clusters = tune())

kmeans_wf <- workflow() %>%
  add_model(kmeans_spec_tuned)  |> 
  add_formula(~.)
```

```{r}
set.seed(1234)
x_boots <- bootstraps(x_df, times = 10)

num_cluster_grid <- tibble(num_clusters = seq(1, 10))

tune_res <- tune_cluster(
  object = kmeans_wf,
  resamples = x_boots,
  grid = num_cluster_grid
)

tune_res |> 
  collect_metrics()
```

```{r}
tune_res |> 
  autoplot()
```

```{r}
final_kmeans <- kmeans_wf %>%
  update_model(kmeans_spec %>% set_args(num_clusters = 2)) %>%
  fit(x_df)
```

```{r}
res_hclust_complete <- hier_clust(linkage_method = "complete") |> 
  fit(~., data = x_df)

res_hclust_average <- hier_clust(linkage_method = "average") |> 
  fit(~., data = x_df)

res_hclust_single <- hier_clust(linkage_method = "single") |> 
  fit(~., data = x_df)
```

```{r}
res_hclust_complete  |> 
  extract_fit_engine()  |> 
  fviz_dend(main = "complete", k = 2)
```

```{r}
data(NCI60, package = "ISLR")
nci60 <- NCI60$data %>%
  as_tibble(.name_repair = ~ paste0("V_", .x)) %>%
  mutate(label = factor(NCI60$labs)) %>%
  relocate(label)
```

```{r}
nci60_pca <- nci60 %>%
  select(-label) %>%
  prcomp(scale = TRUE)

nci60_pcs <- bind_cols(
  augment(nci60_pca),
  nci60 %>% select(label)
)

colors <- unname(palette.colors(n = 14, palette = "Polychrome 36"))

nci60_pcs %>%
  ggplot(aes(.fittedPC1, .fittedPC2, color = label)) +
  geom_point() +
  scale_color_manual(values = colors)
```

```{r}
nci60_pcs %>%
  ggplot(aes(.fittedPC1, .fittedPC3, color = label)) +
  geom_point() +
  scale_color_manual(values = colors)
```

```{r}
tidy(nci60_pca, matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_point() +
  geom_line() +
  scale_x_continuous(breaks = seq(0, 60, by = 5)) +
  scale_y_continuous(labels = scales::percent)
```

```{r}
nci60_rec <- recipe(~ ., data = nci60) %>%
  step_rm(label) %>%
  step_normalize(all_predictors())

nci60_wf <- workflow() %>%
  add_recipe(nci60_rec)

nci60_complete <- nci60_wf %>%
  add_model(hier_clust(linkage_method = "complete")) %>%
  fit(data = nci60)

nci60_complete %>%
  extract_fit_engine() %>%
  fviz_dend(k = 4, main = "hclust(complete) on nci60")
```

```{r}
predict(nci60_complete, new_data = nci60, num_clusters = 4) %>%
  mutate(label = nci60$label) %>%
  count(label, .pred_cluster) %>%
  group_by(.pred_cluster) %>%
  mutate(prop = n / sum(n)) %>%
  slice_max(n = 1, order_by = prop) %>%
  ungroup()
```

```{r}
set.seed(2)
nci60_kmeans <- nci60_wf %>%
  add_model(k_means(num_clusters = 4)) %>%
  fit(data = nci60)
```
